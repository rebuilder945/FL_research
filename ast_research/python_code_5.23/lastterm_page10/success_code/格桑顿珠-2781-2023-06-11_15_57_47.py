# 身份证验证
# 【问题描述】
# 一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。中国居民身份证校验码算法如下：
# 将身份证号码前面的17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：
# 7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。
# 将这17位数字和系数相乘的结果相加。用加出来和除以11，取余数。
# 余数只可能有0－1－2－3－4－5－6－7－8－9－10这11个数字， 
# 其分别对应的最后一位身份证的号码为1－0－X－9－8－7－6－5－4－3－2
# 余数和校验码的对应关系可以用公式：m=(12-n) mod 11计算，
# 其中mod为求余运算，m为校验码，n为之前计算出来的余数。
# 如果之前计算出的余数是3，第18位的校验码就是9。
# 如果余数是2那么对应的校验码就是X，X实际是罗马数字10。 
#     编写程序，判断一个身份证的最后一位校验码是否正确，这里并不检验前17位是否合理。
# 【输入形式】
# 一个18位身份证号
# 【输出形式】
# 不是18位，输出：Error；校验码正确，输出：Correct；校验码错误，输出：Wrong
# 【样例输入】
# 53010219200508011X
# 【样例输出】
# Correct

def checkID(s):
    chengzi = [
        7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2
    ]
    jiaoyanma = [
        "1", "0", "X", "9", "8", "7", "6", "5", "4", "3", "2"
    ]
    sum = 0
    if len(s) != 18:
        return "Error"
    for i in range(len(s) - 1):
        sum += chengzi[i] * int(s[i])
    index = sum % 11
    if s[-1] == jiaoyanma[index]:
        return "Correct"
    else:
        return "Wrong"
IDNumber = input()
print(checkID(IDNumber))
