# 【问题描述】
#     一个合法的身份证号码由17位地区、日期编号和顺序编号加1位校验码组成。中国居民身份证校验码算法如下：
#     将身份证号码前面的17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。
#     将这17位数字和系数相乘的结果相加。用加出来和除以11，取余数。
#     余数只可能有0－1－2－3－4－5－6－7－8－9－10这11个数字， 其分别对应的最后一位身份证的号码为1－0－X－9－8－7－6－5－4－3－2。
# 余数n和校验码m的对应关系可以用公式：m=(12-n) mod 11计算，其中mod为求余运算，m为校验码，n为之前计算出来的余数。如果之前计算出的余数是3，
# 第18位的校验码就是9。如果余数是2那么对应的校验码就是X，X实际是罗马数字10。 
#     编写程序，判断一个身份证的最后一位校验码是否正确，这里并不检验前17位是否合理。
# 【输入形式】
# 一个18位身份证号
# 【输出形式】
# 不是18位，输出：Error；校验码正确，输出：Correct；校验码错误，输出：Wrong
# 【样例输入】
# 53010219200508011X
# 【样例输出】
# Correct
# 【样例说明】
#     身份证号码为53010219200508011X， 我们看看这个身份证是不是合法的身份证。
# 首先我们得出前17位的乘积和【(57)+(39)+(010)+(15)+(08)+(24)+(12)+(91)+(26)+(03)+(07)+(59)+(010)+(85)+(08)+(14)+(1*2)】是189，
# 然后用189除以11得出的结果是189/11=17----2，也就是说其余数是2。最后通过对应规则就可以知道余数2对应的检验码是X。
# 所以，可以判定这是一个正确的身份证号码。

num=list(input())
if len(num)!=18:
    print("Error")
num[-1]=10
for i in range(len(num)):
    num[i]=int(num[i])
xishu=[7,9,10,5,8,4,2,1,6,3,7,9,10,5,8,4,2]
sum=0
for i in range(17):
    sum+=num[i]*xishu[i]
if (12-sum) % 11 == num[-1]:
    print("Correct")
else:
    print("Wrong")

